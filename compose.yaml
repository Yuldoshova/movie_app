name: movie-app
services:
  postgres:
    env_file: .env
    container_name: postgres-movie-app
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: ${DB_NAME:-postgres}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - postgres:/data/postgres
    ports:
      - '5432:5432'
    networks:
      - movie-app
    restart: unless-stopped
  redis:
    env_file: .env
    container_name: redis-movie-app
    image: redis:latest
    command:
      - /bin/sh
      - -c
      # - Double dollars, so that the variable is not expanded by Docker Compose
      # - Surround by quotes, so that the shell does not split the password
      # - The ${variable:?message} syntax causes shell to exit with a non-zero
      #   code and print a message, when the variable is not set or empty
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    environment:
      - REDIS_HOST=${REDIS_HOST:-localhost}
      - REDIS_USER=${REDIS_USER:-default}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis}
    ports:
      - 6379:${REDIS_PORT:-6379}
    networks:
      - movie-app
  server:
    image: node:20-alpine
    container_name: server-movie-app
    volumes:
      - .:/usr/src/app           # Kodni ulash
      - /usr/src/app/node_modules # node_modules uchun konteyner ichida saqlash
    working_dir: /usr/src/app
    env_file:
      - .env
    ports:
      - "${PORT:-3000}:3000"
    command: sh -c "npm install && npm run start:dev"
    depends_on:
      - postgres
      - redis
    networks:
      - movie-app                    # Umumiy tarmoqqa ulanish
networks:
  movie-app:
    name: movie-app
    driver: bridge
volumes:
  postgres: